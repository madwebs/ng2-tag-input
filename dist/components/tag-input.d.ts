import { ElementRef, EventEmitter, Renderer, OnInit } from '@angular/core';
import { TagInputAccessor } from './accessor';
export declare class TagInputComponent extends TagInputAccessor implements OnInit {
    private element;
    private renderer;
    separatorKeys: number[];
    placeholder: string;
    secondaryPlaceholder: string;
    maxItems: number;
    readonly: boolean;
    transform: (item: string) => string;
    validators: any[];
    autocomplete: boolean;
    autocompleteItems: string[];
    onlyFromAutocomplete: boolean;
    onAdd: EventEmitter<string>;
    onRemove: EventEmitter<string>;
    onSelect: EventEmitter<string>;
    template: ElementRef;
    dropdown: any;
    itemsMatching: any[];
    selectedTag: string;
    private hasTemplate;
    private tagElements;
    input: any;
    private listeners;
    private form;
    constructor(element: ElementRef, renderer: Renderer);
    removeItem(item: string): void;
    addItem(isFromAutocomplete?: boolean): void;
    selectItem(item: string): void;
    fireEvents(eventName: string, $event?: any): void;
    handleKeydown($event: any, item: string): void;
    private setInputValue(value);
    private getControl();
    private focus();
    private blur();
    private maxItemsReached;
    private escapeDropdown($event);
    ngOnInit(): void;
    ngAfterViewChecked(): void;
    ngAfterViewInit(): void;
}
